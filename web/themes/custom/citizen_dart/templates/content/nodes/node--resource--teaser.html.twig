{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{% extends 'node.html.twig' %}

{%- if content.field_resource_type.0['#markup'] == 'external_link' -%}
  {% set resource_type = 'external_link' %}
  {% set author_icon = '<div class="author-icon"><svg xmlns="http://www.w3.org/2000/svg" height="48" width="48"><path d="M17 34.75h14v-1.5H17Zm0-8.2h14V25H17ZM12.75 42q-1.15 0-1.95-.8t-.8-1.95V8.75q0-1.15.8-1.95t1.95-.8h16.7L38 14.55v24.7q0 1.15-.8 1.95t-1.95.8ZM28.7 15.2V7.55H12.75q-.45 0-.825.375-.375.375-.375.825v30.5q0 .45.375.825.375.375.825.375h22.5q.45 0 .825-.375.375-.375.375-.825V15.2ZM11.55 7.55v7.65-7.65V40.45 7.55Z"/></svg></div>' %}
{%- elseif content.field_resource_type.0['#markup'] == 'document' -%}
  {% set resource_type = 'document' %}
  {% set author_icon = '<div class="author-icon"><svg xmlns="http://www.w3.org/2000/svg" height="48" width="48"><path d="M17 34.75h14v-1.5H17Zm0-8.2h14V25H17ZM12.75 42q-1.15 0-1.95-.8t-.8-1.95V8.75q0-1.15.8-1.95t1.95-.8h16.7L38 14.55v24.7q0 1.15-.8 1.95t-1.95.8ZM28.7 15.2V7.55H12.75q-.45 0-.825.375-.375.375-.375.825v30.5q0 .45.375.825.375.375.825.375h22.5q.45 0 .825-.375.375-.375.375-.825V15.2ZM11.55 7.55v7.65-7.65V40.45 7.55Z"/></svg></div>' %}
{%- elseif content.field_resource_type.0['#markup'] == 'form' -%}
  {% set resource_type = 'form' %}
  {% set author_icon = '<div class="author-icon"><svg xmlns="http://www.w3.org/2000/svg" height="48" width="48"><path d="M17 34.75h14v-1.5H17Zm0-8.2h14V25H17ZM12.75 42q-1.15 0-1.95-.8t-.8-1.95V8.75q0-1.15.8-1.95t1.95-.8h16.7L38 14.55v24.7q0 1.15-.8 1.95t-1.95.8ZM28.7 15.2V7.55H12.75q-.45 0-.825.375-.375.375-.375.825v30.5q0 .45.375.825.375.375.825.375h22.5q.45 0 .825-.375.375-.375.375-.825V15.2ZM11.55 7.55v7.65-7.65V40.45 7.55Z"/></svg></div>' %}
{%- elseif content.field_resource_type.0['#markup'] == 'article' -%}
  {% set resource_type = 'article' %}
  {% set author_icon = '<div class="author-icon"><svg xmlns="http://www.w3.org/2000/svg" height="48" width="48"><path d="M17 34.75h14v-1.5H17Zm0-8.2h14V25H17ZM12.75 42q-1.15 0-1.95-.8t-.8-1.95V8.75q0-1.15.8-1.95t1.95-.8h16.7L38 14.55v24.7q0 1.15-.8 1.95t-1.95.8ZM28.7 15.2V7.55H12.75q-.45 0-.825.375-.375.375-.375.825v30.5q0 .45.375.825.375.375.825.375h22.5q.45 0 .825-.375.375-.375.375-.825V15.2ZM11.55 7.55v7.65-7.65V40.45 7.55Z"/></svg></div>' %}
{%- elseif content.field_resource_type.0['#markup'] == 'video' -%}
  {% set resource_type = 'video' %}
  {% set author_icon = '<div class="author-icon"><svg xmlns="http://www.w3.org/2000/svg" height="48" width="48"><path d="M17 34.75h14v-1.5H17Zm0-8.2h14V25H17ZM12.75 42q-1.15 0-1.95-.8t-.8-1.95V8.75q0-1.15.8-1.95t1.95-.8h16.7L38 14.55v24.7q0 1.15-.8 1.95t-1.95.8ZM28.7 15.2V7.55H12.75q-.45 0-.825.375-.375.375-.375.825v30.5q0 .45.375.825.375.375.825.375h22.5q.45 0 .825-.375.375-.375.375-.825V15.2ZM11.55 7.55v7.65-7.65V40.45 7.55Z"/></svg></div>' %}
{% endif %}

{% block nodeTitle %}
  <h2{{ title_attributes }}>
    {%- if resource_type == 'external_link' -%}
      {%- trans -%}<a href="{{- content.field_link.0['#title'] -}}" rel="bookmark">{{- label.0['#context'].value -}}</a>{%- endtrans -%}
    {%- elseif resource_type == 'document' -%}
      {{ content.field_file }}
      {%- trans -%}<a href="{{- url -}}" rel="bookmark">{{- label.0['#context'].value -}}</a>{%- endtrans -%}
    {%- elseif resource_type == 'form' -%}
      {%- trans -%}<a href="{{- content.field_link.0['#title'] -}}" rel="bookmark">{{- label.0['#context'].value -}}</a>{%- endtrans -%}
    {%- elseif resource_type == 'article' or resource_type == 'video' -%}
      {%- trans -%}<a href="{{- url -}}" rel="bookmark">{{- label.0['#context'].value -}}</a>{%- endtrans -%}
    {% endif %}
  </h2>
{% endblock %}

{% block node %}
  {{ content.field_description }}
  <div class="author">
    {{ author_icon|raw }}
    {{ content.field_author }}
  </div>
{% endblock %}
